// Generated by CoffeeScript 1.9.3
(function() {
  var app,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  app = angular.module("app");

  app.controller("userCtrl", function($scope, $rootScope, $http, $location) {
    $http.get('/backend/api/user/info/').success(function(response) {
      $scope.username = response.data.user_name;
    });

    $scope.logout = function() {
      $http.post('/logout/', $scope.modifyData).success(function(response) {
        return window.location.href = '/login/';
      });
    };

    $scope.modify_password = function(modifyData) {
      if (modifyData.new_password != modifyData.confirm_password) {
        return alert("The two new passwords are different");
      };
      return $http.post('/modify/password/', $scope.modifyData).success(function(response) {
        if (response.code == 1) {
          $http.post('/logout/', $scope.modifyData).success(function(response) {
            return window.location.href = '/login/';
          });
        } else {
          return alert(response.message);
        };
      });
    };
  });

  app.controller("userListCtrl", function($scope, $rootScope, $http, $location) {
    $scope.list = [];
    $scope.total_aggregate = [];
    $rootScope.loadding = true;
    $scope.pager = {
      total: 0,
      size: 20,
      index: 1
    };

    $scope.search = function() {
      $rootScope.loadding = true;
      var data = angular.extend($scope.pager, $scope.query);
      $http.get('/backend/api/user/list/', {params: data}).success(function(response) {
        $scope.list = response.data;
        $scope.pager.total = response.total;
        return $rootScope.loadding = false;
      });
    };

    $scope.search();
    $scope.change_page = function() {
      return $scope.search();
    };
    $scope.delete = function(region_id) {
      if (confirm("Confirm delete?")) {
        data = {region_id: region_id};
        $http.post('/micou/region/j/delete/', data).success(function(response) {
          $rootScope.loadding = true;
          $scope.search();
        });
      }
    };

    $scope.create = function(formData) {
      $rootScope.loadding = true;
      console.log(formData);
      var data = formData;
      $http.post('/backend/api/user/create/', data).success(function(response) {
        $rootScope.loadding = false;
        return $location.path("/user/list/");
      });
    };

  });

  app.controller("regionCreateCtrl", function($scope, $rootScope, $http, $location) {
    return $scope.save = function() {
      console.log($scope.formData);
      return $http.post('/micou/region/j/create/', $scope.formData).success(function(response) {
        return $location.path("region/list/");
      });
    };
  });

  app.controller("regionUpdateCtrl", function($scope, $rootScope, $http, $location) {
    region_id = $location.search().region_id;
    $http.get('/micou/region/j/info/?region_id=' + region_id).success(function(response) {
      $scope.formData = response.data;
    });

    $scope.save = function() {
      console.log($scope.formData);
      return $http.post('/micou/region/j/update/', $scope.formData).success(function(response) {
        return $location.path("region/list/");
      });
    };
  });

  app.controller("secondListCtrl", function($scope, $rootScope, $http) {
    $scope.list = [];
    $scope.total_aggregate = [];
    $rootScope.loadding = true;
    $scope.pager = {
      total: 0,
      size: 20,
      index: 1
    };

    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });

    $http.get('/micou/backend/j/second/status/').success(function(response) {
      $scope.activity_status = response.data;
    });

    $scope.status_show = function(status) {
      if (status == 1) {
        return '<font color="red">Not start</font>';
      } else if (status == 2) {
        return '<font color="green">Running</font>';
      } else {
        return '<font color="black">Finish</font>';
      };
    };

    $scope.search = function() {
      var data;
      $rootScope.loadding = true;
      data = angular.extend($scope.pager, $scope.query);
      $http.get('/micou/backend/j/second/list/', {params: data}).success(function(response) {
        $scope.list = response.data;
        $scope.pager.total = response.total;
        return $rootScope.loadding = false;
      });
    };
    $scope.search();
    $scope.change_page = function() {
      return $scope.search();
    };
    $scope.delete = function(activity_id) {
      if (confirm("Confirm delete?")) {
        data = {activity_id: activity_id};
        $http.post('/micou/backend/j/second/delete/', data).success(function(response) {
          $rootScope.loadding = true;
          $scope.search();
        });
      }
    };
  });

  app.controller("secondCreateCtrl", function($scope, $rootScope, $http, $location) {
    config = {is_anchor_rank: true,
              is_user_rank: true,
              is_gift: true,
              fans_num: 50,
              streamer_num: 100};
    $scope.formData = {config: config,};

    $(function() {
      $('#date-from').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $('#date-to').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $("#date-from").on("dp.change", function(e) {
        if (e.date) {
          $('#date-to').data("DateTimePicker").minDate(e.date);
          return $scope.formData.start_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        } else {
          return $scope.formData.start_time = null;
        }
      });
      return $("#date-to").on("dp.change", function(e) {
        if (e.date) {
          $('#date-from').data("DateTimePicker").maxDate(e.date);
          return $scope.formData.end_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        } else {
          return $scope.formData.end_time = null;
        }
      });
    });

    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });

    $scope.uploadImage = function() {
      var file;
      $rootScope.loadding = true;
      file = document.getElementById("imageUpload").files[0];
      console.log(file);
      return $http({
        url: '/micou/upload/image/',
        method: 'POST',
        data: file
      }).success(function(data, status, headers, config) {
        $rootScope.loadding = false;
        $scope.formData.config.reward_rule = data.data.url;
        return console.log(data);
      });
    };

    return $scope.save = function() {
      $scope.formData.gifts = {show: $scope.show_gifts,
                               noshow: $scope.noshow_gifts};
      console.log($scope.formData);
      return $http.post('/micou/backend/j/second/create/', $scope.formData).success(function(response) {
        if (response.code == 0) {
            alert(response.message);
        } else {
          return $location.path("second/list/");
        }
      });
    };
  });

  app.controller("secondUpdateCtrl", function($scope, $filter, $http, $location, $rootScope) {
    activity_id = $location.search().activity_id;
    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });
    $http.get('/micou/backend/j/second/info/?activity_id=' + activity_id).success(function(response) {
      $scope.formData = response.data;
      $scope.start_time = $filter("date")($scope.formData.start_time, "yyyy-MM-dd HH:mm:ss");
      $scope.end_time = $filter("date")($scope.formData.end_time, "yyyy-MM-dd HH:mm:ss");
      $scope.show_gifts = $scope.formData.gifts.show;
      $scope.noshow_gifts = $scope.formData.gifts.noshow;
    });
    $(function() {
      $('#date-from').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $('#date-to').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $("#date-from").on("dp.change", function(e) {
        if (e.date) {
          $('#date-to').data("DateTimePicker").minDate(e.date);
          return $scope.formData.start_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        } else {
          return $scope.formData.start_time = null;
        }
      });
      return $("#date-to").on("dp.change", function(e) {
        if (e.date) {
          $('#date-from').data("DateTimePicker").maxDate(e.date);
          return $scope.formData.end_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        } else {
          return $scope.formData.end_time = null;
        }
      });
    });
    $scope.uploadImage = function() {
      var file;
      $rootScope.loadding = true;
      file = document.getElementById("imageUpload").files[0];
      console.log(file);
      return $http({
        url: '/micou/upload/image/',
        method: 'POST',
        data: file
      }).success(function(data, status, headers, config) {
        $rootScope.loadding = false;
        $scope.formData.config.reward_rule = data.data.url;
        return console.log(data);
      });
    };
    $scope.save = function() {
      $scope.formData.gifts = {show: $scope.show_gifts,
                               noshow: $scope.noshow_gifts};
      console.log($scope.formData);
      return $http.post('/micou/backend/j/second/update/', $scope.formData).success(function(response) {
        if (response.code == 0) {
            alert(response.message);
        } else {
          return $location.path("second/list/");
        }
      });
    };
  });

  app.controller("secondRankCtrl", function($scope, $rootScope, $http) {
    $scope.list = [];
    $scope.total_aggregate = [];
    $rootScope.loadding = true;
    $scope.pager = {
      total: 0,
      size: 20,
      index: 1
    };
    $scope.rank_types = [{key: "Anchors", value: 1},
                         {key: "Fans", value: 2}];

    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });

    $scope.search = function() {
      var data;
      $rootScope.loadding = true;
      data = angular.extend($scope.pager, $scope.query);
      $http.get('/micou/backend/j/second/rank/', {params: data}).success(function(response) {
        $scope.list = response.data;
        $scope.pager.total = response.total;
        return $rootScope.loadding = false;
      });
    };
    $scope.search();
    $scope.change_page = function() {
      return $scope.search();
    };
  });

  app.controller("recordListCtrl", function($scope, $rootScope, $http) {
    $scope.list = [];
    $scope.total_aggregate = [];
    $scope.pager = {
      total: 0,
      size: 20,
      index: 1
    };
    $scope.query = {
      start_time: null,
      end_time: null
    };
    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });
    $(function() {
      $('#date-from').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $('#date-to').datetimepicker({
        sideBySide: true,
        format: "YYYY-MM-DD HH:mm:ss",
        stepping: 1,
        useCurrent: false
      });
      $("#date-from").on("dp.change", function(e) {
        if (e.date) {
          $('#date-to').data("DateTimePicker").minDate(e.date);
          return $scope.query.start_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        }
      });
      return $("#date-to").on("dp.change", function(e) {
        if (e.date) {
          $('#date-from').data("DateTimePicker").maxDate(e.date);
          return $scope.query.end_time = 1000 * moment(e.date.format('YYYY-MM-DD HH:mm:ss')).unix();
        }
      });
    });
    $scope.search = function() {
      var data;
      $rootScope.loadding = true;
      data = angular.extend($scope.pager, $scope.query);
      $http.get('/micou/backend/j/record/list/', {params: data}).success(function(response) {
        $scope.list = response.data;
        $scope.pager.total = response.total;
        return $rootScope.loadding = false;
      });
    };
    $scope.change_page = function() {
      return $scope.search();
    };

    $scope.export = function() {
      var data;
      $rootScope.loadding = true;
      data = angular.extend($scope.pager, $scope.query);
      var _str = "";
      for (var key in $scope.query) {
        if ($scope.query[key]) {
          _str += key + "=" + $scope.query[key] + "&"
        }
      }
      window.location.href = '/micou/backend/j/record/export/?' + _str;
      $rootScope.loadding = false;
    };
  });

  app.controller("whiteMoonListCtrl", function($scope, $rootScope, $http) {
    $scope.list = [];
    $scope.total_aggregate = [];
    $scope.pager = {
      total: 0,
      size: 20,
      index: 1
    };
    $scope.platforms = [{key: "Mico", value: 1},
                         {key: "Kitty", value: 2}];

    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });

    $scope.uploadFile = function() {
      var file = document.getElementById("fileUpload").files[0];
      $rootScope.loadding = true;
      if ($scope.query && $scope.query.platform && $scope.query.region) {
        return $http({
          url: '/micou/backend/j/white/moon/create/',
          method: 'POST',
          data: file,
          headers: $scope.query,
        }).success(function(data, status, headers, config) {
          if (data.ex_user.length > 0) {
              alert("These user don't exist.\n" + data.ex_user)
          }
          $rootScope.loadding = false;
          $scope.search();
        });
      } else {
        alert("The region and platform are required!");
      }
      window.location.reload();
    };

    $scope.search = function() {
      var data;
      $rootScope.loadding = true;
      data = angular.extend($scope.pager, $scope.query);
      $http.get('/micou/backend/j/white/moon/list/', {params: data}).success(function(response) {
        if (response.data.length == 0) {
           alert("No data!")
        }
        $scope.list = response.data;
        return $rootScope.loadding = false;
      });
    };
  });

  app.controller("dayStarListCtrl", function($scope, $rootScope, $http) {
    $scope.list = [];
    $scope.query = {};
    $scope.selected = [];

    $scope.day_types = [{key: "Mid-night", value: 1},
                        {key: "Early morning", value: 2}];

    $http.get('/micou/region/j/mini/list/').success(function(response) {
      $scope.regions = response.data;
    });

    $(function() {
      $('#date-month').datetimepicker({
        sideBySide: true,
        format: "YYYY-M",
        stepping: 1,
        useCurrent: false
      });
      $("#date-month").on("dp.change", function(e) {
        if (e.date) {
          return $scope.query.month = e.date.format('YYYY-M');
        }
      });
    });

    $scope.uploadFile = function() {
      var file = document.getElementById("fileUpload").files[0];
      $rootScope.loadding = true;
      if ($scope.query && $scope.query.daytype && $scope.query.region && $scope.query.month) {
        return $http({
          url: '/micou/backend/j/day/star/create/',
          method: 'POST',
          data: file,
          headers: $scope.query,
        }).success(function(data, status, headers, config) {
          if (data.ex_user.length > 0) {
              alert("These user don't exist.\n" + data.ex_user)
          }
          $rootScope.loadding = false;
          $scope.search();
        });
      } else {
        alert("The region, Day Type and Month are required!");
      }
      window.location.reload();
    };

    $scope.search = function() {
      var data;
      $rootScope.loadding = true;
      $http.get('/micou/backend/j/day/star/list/', {params: $scope.query}).success(function(response) {
        if (response.data.length == 0) {
           alert("No data!")
        }
        $scope.list = response.data;
        return $rootScope.loadding = false;
      });
    };

    $scope.clean = function() {
      var data = angular.copy($scope.query);
      var clean_uids = $scope.selected.join(",");
      data["uids"] = clean_uids;
      $http.post('/micou/backend/j/day/star/clean/', data=data).success(function(response) {
        return $scope.search()
      });
    };

    $scope.selectAll = function($event) {
      var checkbox, checked, item, j, len, ref, results;
      checkbox = $event.target;
      checked = checkbox.checked;
      if (checked) {
        ref = $scope.list;
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          item.selected = true;
          var index = $scope.selected.indexOf(item.uid);
          if(index === -1) {
            $scope.selected.push(item.uid);
          }
        }
      } else {
        ref = $scope.list;
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          item.selected = false;
        }
        $scope.selected = [];
      }
    };

    $scope.selectOne = function($event, item) {
      var checkbox = $event.target;
      var checked = checkbox.checked;
      if (checked) {
        item.selected = true;
        var index = $scope.selected.indexOf(item.uid);
        if(index === -1) {
          $scope.selected.push(item.uid);
        }
      } else {
        item.selected = false;
        var index = $scope.selected.indexOf(item.uid);
        if(index !== -1) {
          $scope.selected.splice(index, 1);
        }
      }
    };
  });

}).call(this);
